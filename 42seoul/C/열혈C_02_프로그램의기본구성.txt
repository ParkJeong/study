C언어로 함수로 시작해서 함수로 끝난다.

함수란 적절한 입력과 그에 따른 출력이 존재하는 것이다.


함수
만들어진 함수, 실행이 가능한 함수

함수의 호출
함수의 실행을 명령하는 행위

인자의 전달
함수의 실행을 명령할 때 전달하는 입력 값


정해진 순서에 의해서 진행되는 함수의 호출이 바로 프로그램의 흐름이 된다. 
프로그램이 실행되자마자 컴퓨터는 main이라는 이름의 함수를 찾아서 호출한다.

함수의 기능을 정의하고 있는 영역을 가리켜 함수의 몸체라고 한다.

c언어는 큰따옴표를 이용해서 문자열을 표현한다. 큰따옴표로 표현되는 문자열 안에는 특수한 의미의 문자를 삽입할 수 있다. 특수문자의 공식명칭은 이스케이프 시퀀스이다.

기본으로 제공되는 함수를 가리켜 표준함수라고 하고 표준함수들의 모임을 가리켜 표준 라이브러리라고 한다. 필요한 함수가 표준함수로 정의되어 있다면 이를 사용해서 프로그램을 완성하는 것이 더 바람직하다.

표준함수의 호출을 위해서는 헤더파일 선언이라는 것을 해야 한다. 헤더파일의 선언은 소스파일의 맨 앞부분, main 함수 저으이 이전에 와야 한다.

return은 함수의 종료와 값의 반환이라는 두 가지 의미를 지닌다. 
main함수의 종료는 프로그램의 종료이다.

main함수의 마지막에서 0을 전달하는 이유는 무엇일까?
main 함수는 프로그램이 시작되면 자동으로 호출되는 함수이다. 그리고 호출의 주체는 Windows나 Linux와 같은 운영체제이다. 따라서 0은 운영체제에게 전달된다. 그리고 그 값은 프로그램의 종료상태를 알리는 용도로 사용된다. 보통 0은 정상적인 종료의 상황에서 전달하는 값이다. 반면 비정상적인 상황으로 인해서 종료될 때에는 일반적으로 0이 아닌 값을 전달한다.


주석은 프로그램 내에 삽입된 메모를 뜻한다. 이는 컴파일의 대상에서 제외된다.


주석의 필요성
다른사람들이 자신의 소스코드를 이해하는데 도움을 주기 위해서이다.
자기가 짠 소스코드의 의미를 시간이 지난 후에 다시 봤을 때 이해를 돕기 위해서이다.
주석은 필수다.

블록 단위 주석: /**/ 
행 단위 주석: //

/*
제 목:
기 능:
파일이름:
수정날짜:
작성자:
*/

주석은 간결하고 명료해야 한다.


printf("%d\n");
%d와 같은 문자를 가리켜 서식문자(conversion specifier)라고 한다. 이는 출력의 형태를 지정하는 용도로 사용이 된다. 