포인터 변수란 메모리의 주소 값을 저장하기 위한 변수이다.

32비트 시스템에서는 주소 값을 32비트로 표현하기 때문에 포인터 변수의 크기가 4바이트이다.
64비트 시스템에서는 주소 값을 64비트로 표현하기 때문에 포인터 변수의 크기가 8바이트이다.

type * ptr;
type형 변수의 주소 값을 저장하는 포인터 변수 ptr의 선언

int main(void){
	int * pnum;
	int num;
	pnum = &num;
}



int *, char *, double *을 포인터 형이라한다. 포인터 변수도 값을 저장하는 변수이기 때문에 포인터 형 역시 자료형의 범주에 포함시키기도 한다.

int * int형 포인터
int * pnum1; int형 포인터 변수 pnum1



변수의 주소값을 반환하는 &연산자
포인터가 가리키는 메모리를 참조하는 *연산자


포인터의 형은 메모리 공간을 참조하는 기준이 된다.

포인터 변수를 선어만하고 초기화하지 않으면, 포인터 변수는 쓰레기 값으로 초기화 된다. 
포인터 변수를 초기화할 때는 널 포인터로 초기화 하는 것이 좋다.
int * ptr1 = 0;
int * ptr2 = NULL; // NULL은 사실상 0을 의미한다.
0번지를 가리키는 것이 아니라 아무데도 가리키지 않는 것을 의미한다.

키워드 NULL은 널 포인터를 의미한다. NULL은 상수 0으로 정의되어 있다.










