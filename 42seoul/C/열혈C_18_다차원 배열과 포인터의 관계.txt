
int arr2d[3][3];

arr2d와 arrd2[0]는 같은 것인가?
다른 것이다.
arr2d와 arrd2[0]는 arr2d의 첫번째 요소를 가리키는 것으로 같다.
하지만 sizeof 연산자를 사용해서 확인해보면 arr2d는 배열 전체를 가리키고 arr2d[0]는 배열의 첫 행만을 가리킨다는 것을 알 수 있다. 따라서 arr2d와 arr2d[0]는 다르다.


2차원 배열의 포인터형에는 두가지 정보가 담겨있다.
(2차원 배열의 이름)
1. 가리키는 대상은 무엇인가?
2. 배열이름을 대상으로 값을 1 증가 및 감소 시 실제로는 얼마가 증가 및 감소하는가?

int arr[3][4];
배열이름 arr이 가리키는 대상은 int형 변수이고, arr의 값을 1증가 시키면 실제로는 sizeof(int)*4의 크기만큼 주소 값이 증가하는 포인터 형이다.

arr은 가리키는 대상이 int형 변수이고, 포인터 연산 시 sizeof(int)*4의 크기단위로 값이 증가 및 감소하는 포인터 형이다.


int * ptr;


배열 포인터 변수
int (*ptr) [4];
ptr이라는 이름의 포인터 변수를 선언한 것이며, 왼편에 선언된 int는 가리키는 대상의 자료형을 의미하며, 오른편에 있는 [4]는 한번에 건너뛸 변수의 개수를 의미한다.

char (*arr1)[4];
arr1은 char형 변수를 가리키면서, 포인터 연산 시 sizeof(char)*4의 크기단위로 값이 증가 및 감소하는 포인터 변수

double (*arr2)[7];
arr2는 double형 변수를 가리키면서, 포인터 연산 시 sizeof(double)*7의 크기단위로 값이 증가 및 감소하는 포인터 변수



int * whoA [4];	// 포인터 배열 int형 포인터 변수로 이뤄진 int형 포인터배열
int (*whoB) [4];	// 배열 포인터 가로길이가 4인 int형 2차원 배열을 가리키는 용도의 포인터변수


int Sum2DArr(int arr[][4], int column) { ... }
int Sum2DArr(int (*arr)[4], int column) { ... }


sizeof(arr1) / sizeof(arr1[0]) // 2차원 배열의 세로길이 계산시 흔히 사용되는 방법
















