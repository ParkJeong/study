메모리상에  저장된 함수의 주소 값을 저장하는 포인터 변수가 함수 포인터 변수이다.


프로그래머가 정의하는 모든 함수는 프로그램 실행 시 메인 메모리에 저장되어서 실행이 된다. 그리고 함수의 이름은 함수가 저장된 메모리 공간의 주소 값을 의미한다.

함수의 주소 값 저장을 위한 포인터 변수를 별도로 선언할 수 있으며, 이러한 용도로 선언된 포인터 변수를 함수 포인터 변수라 한다.


함수 포인터의 형은 반환형과 매개변수의 선언형태를 기준으로 구분하기로 약속됐다.

int SimpleFunc(int num) { ... }
반환형이 int이고 매개변수로 int형 변수가 하나 선언된 포인터 형이다.


함수 포인터 변수의 선언

int (*fptr) (int)
반환형이 int이고 매개변수로 int형 변수가 하나 선언된 포인터 형이다.

int SoSimple(int num1, int num2) { ... }
int (*fptr) (int, int);
fptr = SoSimple;
fptr(3,4); // SoSimple(3, 4)와 동일하다.


형이 존재하지 않는 void 포인터
void * ptr;
위와 같이 선언되는 포인터 변수를 가리켜 void형 포인터 변수라고 한다.
void형 포인터 변수에는 어떠한 변수의 주소값이든 담을 수 있다. 함수의 주소 값도 담을 수 있다.
void형 포인터 변수를 가지고는 아무런 포인터 연산도 하지 못한다. 값의 변경이나 참조도 불가능하다. void형 포인터 변수에는 가리키는 대상에 대한 어떠한 형 정보도 담겨있지 않으므로 당연한 것이다.
일단 주소 값에만 의미를 두고, 포인터의 형은 나중에 결정할때 유용하다.














